package users.controller;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import users.service.UsersService;
import users.vo.UsersVO;

@Controller
public class UsersController {
	
	@Autowired
	UsersService service;
	HashMap<String, Object> param = new HashMap<String, Object>();
	//로그인
	@RequestMapping(value = "/mainLgn.do")
	public String mainLogin(@RequestParam("userId") String userId,
			@RequestParam("userPass") String userPass,ModelMap model,
			HttpServletRequest req) throws Exception{
			
			String webCtrl = "";
			param.put("user_id", userId);
			param.put("passwd", userPass);
			
			String loginChk = service.selectLoginCheck(param);
			
			if(loginChk == null) {
				model.addAttribute("userLoginStt" , "fail");
			} else if(!loginChk.equals("null")) {
				model.addAttribute("userLoginStt" , "success");
				String clientChk = service.selectCheckClient(param);
				model.addAttribute("userName" , loginChk);
				model.addAttribute("userClientStt" , clientChk);
				model.addAttribute("user_id" , userId);
			}
			
			return "main";
		}
	//유저 조인 JSP 이동
	@RequestMapping(value = "/join", method = RequestMethod.GET)
	public void getRegister() throws Exception{
	}
	//아이디 중복 체크
	@ResponseBody
	@RequestMapping(value="/idChk", method = RequestMethod.POST)
	public int idChk(String id) throws Exception {
		int result = service.selectIdCheck(id);
		return result;
	}
	//유저 회원가입
	@RequestMapping(value = "/join.do", method = RequestMethod.GET)
	public String postRegister(@RequestParam("userId") String userId,
			@RequestParam("userPass") String userPass,
			@RequestParam("userAddr") String userAddr,
			@RequestParam("userName") String userName,
			@RequestParam("userCall") int userCall,
			ModelMap model, UsersVO vo) throws Exception {

		param.put("user_id", userId);
		param.put("passwd", userPass);
		param.put("address", userAddr);
		param.put("name", userName);
		param.put("phonenum", userCall);
		param.put("grade_no", 1);
		param.put("gname", "일반");
		
		int idChkStt = service.selectIdCheck(userId);
		
		String webCtrl = "";
		
		if(idChkStt == 1) {
			model.addAttribute("idChkStt" , idChkStt);
			return "join";
		} else if(idChkStt == 0) {
			int cntInsert = service.insertUsers(param);
			return "main";
		}
		
		return webCtrl;
	}
	//관리자 메뉴 이동 및 출력
	@RequestMapping(value = "/admStt", method = RequestMethod.GET)
	public String admStt(ModelMap model,HttpServletRequest req) throws Exception {
	
		String webIdStt = req.getParameter("lnkDt");
		String send = "";
		
		switch(webIdStt) {
			case "입고" :
				send = "receive";
				break;

			case "발주" :
				send = "oreder";
				break;
			
			case "상품" :
				send = "product";
				break;
			
			case "사용자" :
				send = "userList";
				List<UsersVO> userList = service.selectUsersList();
				model.addAttribute("userList", userList);
				break;
			
			case "재고" :
				send = "inventory";
				break;
		}
		return send;
	}
	//내 정보
	@RequestMapping(value = "/myInfo", method = RequestMethod.GET)
	public String myInfo(ModelMap model,HttpServletRequest req) throws Exception {
		
		String myInfoId = req.getParameter("userId");
		model.addAttribute("userId", myInfoId);
		
		List<UsersVO> myInfoList = service.selectMyInfo(myInfoId);
		model.addAttribute("myInfoList", myInfoList);
		System.out.println(myInfoList);
		return "myInfo";
	}
	//사용자 정보 변경
	@RequestMapping(value = "updateMyInfo", method = RequestMethod.GET)
	public String updateMyInfo(ModelMap model,HttpServletRequest req,
			@RequestParam("userPass") String userPass,
			@RequestParam("userPass") String userPass,
			@RequestParam("userAddr") String userAddr,
			@RequestParam("userCall") long userCall,UsersVO vo
			) throws Exception {
		
		String myInfoId = req.getParameter("userId");
		List<UsersVO> myInfoList = service.selectMyInfo(myInfoId);
		
		String passwd = String.valueOf(myInfoList).split(":")[2];
		String addr = String.valueOf(myInfoList).split(":")[3];
		String callNum = String.valueOf(myInfoList).split(":")[6];
		String callNumSpl = callNum.split("]")[0];
		
		System.out.println(myInfoId.trim());
		
		if(userPass.trim().equals("")) {
			userPass = passwd;
		}
		
		if(userAddr.trim().equals("")) {
			userAddr = addr;
		}

		if(String.valueOf(userCall).trim().equals("")) {
			userCall = Long.parseLong(callNumSpl);
		}
		
		param.put("userId", );
		param.put("passwd", userPass);
		param.put("address", userAddr);
		param.put("phonenum", userCall);
		
		int userLogin = service.updateMyInfo(param);
		
		return "main";
	}
	
	//메뉴 이동
	@RequestMapping(path = "/main", method = RequestMethod.GET)
	public String list(Model model , HttpServletRequest req) {
		
		String webIdStt = req.getParameter("lnkDt");
		
		if(webIdStt == null) { webIdStt = ""; }
		String send = "";
		
		switch(webIdStt) {
	
			case "join" :
				send = webIdStt;
				break;
			
			case "cart" :
				send = webIdStt;
				break;
				
			case "myInfo" :
				send = webIdStt;
				break;
				
			default :
				send = "main";
				break;
		}
		return send;
	}
	
}